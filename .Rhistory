library(bookdown)
bookdown::preview_chapter(index.Rmd)
bookdown::preview_chapter()
bookdown::preview_chapter("index.Rmd")
bookdown::render_book(new_session = TRUE, preview = TRUE, input = "index.Rmd")
bookdown::preview_chapter("index.Rmd")
bookdown::preview_chapter("index.Rmd")
bookdown::render_book(new_session = TRUE, preview = TRUE, input = "index.Rmd")
bookdown::render_book(new_session = TRUE, preview = TRUE, input = "index.Rmd")
bookdown::render_book(new_session = TRUE, preview = TRUE, input = "01-Introduction.Rmd")
bookdown::render_book(new_session = TRUE)
bookdown::render_book(new_session = TRUE)
bookdown::render_book(new_session = TRUE)
bookdown::render_book(new_session = TRUE)
# This is a place to put any global options for creating this document
rm(list = ls()) # This clears your environment of any variables there. We do
#this to keep things tidy.
library(ggplot2)
library(ggpubr)
library(cowplot)
library(patchwork)
library(dplyr)
source("https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/R/sctype_wrapper.R");
library(HGNChelper)
library(Seurat)
# Easy to change variables for our project folder structure
data_dir <- "datasets"
figs_dir <- "figures"
# This sets to the size of figures in inches
two_panel = 3.5
one_pnael = two_panel/2
# We can do automatic figure numbering. We start with 2 as the flowchart is figure 1
fig_num = 1
mouse_h5 <- "V1_Mouse_Brain_Sagittal_Anterior_Section_2_filtered_feature_bc_matrix.h5"
mouse_image <- Read10X_Image(image.dir = paste0(data_dir, "/spatial"))
brain_ant <- Load10X_Spatial(data.dir = data_dir, filename = mouse_h5,
assay = "Spatial", image = mouse_image)
brain_ant[["percent.mt"]] <- PercentageFeatureSet(brain_ant, pattern = "^mt-")
figa <- VlnPlot(brain_ant, features = "nCount_Spatial", pt.size = 0.1) +
NoLegend() + labs(title = "A. Features Violin Plot", y = "Count") +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),
plot.title = element_text(size = 10),
text = element_text(family = "Helvetica"))
figb <- SpatialFeaturePlot(brain_ant, features = "nCount_Spatial") +
labs(title = "Features Spatial Plot") +
theme(legend.position = "right", plot.title = element_text(size = 16),
text = element_text(family = "Helvetica"))
figc <- VlnPlot(brain_ant, features = "percent.mt") + NoLegend() +
labs(title = "B. Percent Mitochondrial Violin Plot", y = "Percentage") +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),
plot.title = element_text(size = 10),
text = element_text(family = "Helvetica"))
wrap_plots(figa, figb)
figc
ggsave(filename = paste0(figs_dir, "/Figure_clust_", fig_num, ".png"), plot = wrap_plots(figa, figb, figc), units = "in", width = two_panel * (7/4), height = two_panel, dpi = 300)
fig_num = fig_num + 1
brain_ant <- subset(brain_ant,
subset = percent.mt < 30 & nCount_Spatial < 50000)
brain_ant <- SCTransform(brain_ant, assay = "Spatial", verbose = FALSE)
fig <- SpatialFeaturePlot(brain_ant, features = c("Hpca", "Ttr")) &
theme(plot.title = element_text(size = 16, hjust = "left"),
text = element_text(family = "Helvetica"))
fig
ggsave(filename = paste0(figs_dir, "/Figure_clust_", fig_num, ".png"), plot = fig,
units = "in", width = two_panel * (7/4), height = two_panel, dpi = 300)
fig_num = fig_num + 1
brain_ant <- RunPCA(brain_ant, assay = "SCT", verbose = FALSE)
brain_ant <- FindNeighbors(brain_ant, reduction = "pca", dims = 1:30)
brain_ant <- FindClusters(brain_ant, verbose = FALSE)
brain_ant <- RunUMAP(brain_ant, reduction = "pca", dims = 1:30)
brain_ant <- run_sctype(brain_ant, assay = "SCT", scaled = TRUE,
known_tissue_type="Brain", name="sctype_classification")
figa <- DimPlot(brain_ant, group.by = "sctype_classification",
pt.size = .25) +
labs(title = "") +
theme(text = element_text(family = "Helvetica", size = 10),
legend.position = "bottom",
legend.key.spacing.x = unit(0.25, "cm"),
legend.key.spacing.y = unit(0.05, "cm"),
legend.text = element_text(size = 8)) +
coord_fixed(ratio =1)
figa <- DimPlot(brain_ant, group.by = "sctype_classification", pt.size = .25) +
labs(title = "") +
theme(text = element_text(family = "Helvetica", size = 10),
legend.position = "bottom",
legend.key.spacing.x = unit(0.25, "cm"),
legend.key.spacing.y = unit(0.05, "cm"),
legend.text = element_text(size = 8)) +
coord_fixed(ratio =1) +
guides(color = guide_legend(nrow = 3,
override.aes = list(size = 2)))
leg <- get_legend(figa)
figb <- SpatialDimPlot(brain_ant, group.by= "sctype_classification") +
NoLegend() + theme(plot.margin = margin(0, 0, 0, 0))
fig <- ggarrange(figa, figb, nrow = 1, common.legend = TRUE, legend = "bottom", legend.grob = leg) + bgcolor("white")
figa
figb
wrap(figa, figb)
wrap_plots(figa, figb)
fig <- wrap_plots(figa, figb)
fig
figa + figb + plot_layout(guides = "collect")
fig <- figa + figb + plot_layout(guides = "collect")
fig
fig <- figa + figb + plot_layout(guides = "collect") + theme(legend.position = "bottom")
fig
fig <- figa + figb + theme(legend.position = "bottom")
fig
fig <- figa + figb + plot_layout(guides = "collect") & theme(legend.position = "bottom")
fig
ggarrange(figa, figb)
ggarrange(figa, figb, nrow = 1)
ggarrange(figa, figb, nrow = 1, common.legend = TRUE)
bookdown::render_book(new_session = TRUE)
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("03-Materials.Rmd")
rmarkdown::render("02-Materials.Rmd")
rmarkdown::render("02-Materials.Rmd")
rmarkdown::render("02-Materials.Rmd")
rmarkdown::render("03-Clustering.Rmd")
# Remove the # from the line below to load your previous CellChat data if you don't want to rerun the whole thing!
cellChat <- readRDS(paste0(data_dir, "/cellchat_visium_mouse_cortex.rds"))
# These aren't ggplot objects so we have to save them a bit differently
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
rm(list = ls())
library(Seurat)
library(CellChat)
library(patchwork)
data_dir <- "datasets"
fig_dir <- "figures"
# This sets to the size of figures in inches
two_panel = 3.5
one_pnael = two_panel/2
# We can do automatic figure numbering.
fig_num = 1
# Remove the # from the line below to load your previous CellChat data if you don't want to rerun the whole thing!
cellChat <- readRDS(paste0(data_dir, "/cellchat_visium_mouse_cortex.rds"))
# These aren't ggplot objects so we have to save them a bit differently
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_plot <- netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
count_plot
dev.off()
fig_num <- fig_num + 1
count_plot
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
int_plot <- netVisual_circle(cellChat@net$weight, vertex.weight =
rowSums(cellChat@net$weight), weight.scale = TRUE,
label.edge= FALSE, margin = c(0,0,0,0))
int_plot
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, "a.png"), width = two_panel*1.5, height = two_panel, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_map <- netVisual_heatmap(cellChat, measure = "count", color.heatmap = "Blues")
count_map
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, "b.png"), width = two_panel*1.5, height = two_panel, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
weight_map <- netVisual_heatmap(cellChat, measure = "weight", color.heatmap = "Blues")
weight_map
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_plot <- netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
count_plot
count_plot
dev.off()
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_plot <- netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
int_plot <- netVisual_circle(cellChat@net$weight, vertex.weight =
rowSums(cellChat@net$weight), weight.scale = TRUE,
label.edge= FALSE, margin = c(0,0,0,0))
int_plot
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, "a.png"), width = two_panel*1.5, height = two_panel, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_map <- netVisual_heatmap(cellChat, measure = "count", color.heatmap = "Blues")
count_map
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, "b.png"), width = two_panel*1.5, height = two_panel, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
weight_map <- netVisual_heatmap(cellChat, measure = "weight", color.heatmap = "Blues")
weight_map
dev.off()
fig_num <- fig_num + 1
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_plot <- netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
count_plot
dev.off()
fig_num <- fig_num + 1
count_plot
plot(count_plot)
netVisual_circle(cellChat@net$weight, vertex.weight =
rowSums(cellChat@net$weight), weight.scale = TRUE,
label.edge= FALSE, margin = c(0,0,0,0))
# Remove the # from the line below to load your previous CellChat data if you don't want to rerun the whole thing!
cellChat <- readRDS(paste0(data_dir, "/cellchat_visium_mouse_cortex.rds"))
# These aren't ggplot objects so we have to save them a bit differently
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_plot <- netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
count_plot
dev.off()
fig_num <- fig_num + 1
netVisual_circle(cellChat@net$count,
vertex.weight = rowSums(cellChat@net$count),
weight.scale = TRUE, label.edge= FALSE, margin = c(0,0,0,0))
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*2, height = two_panel*2, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
int_plot <- netVisual_circle(cellChat@net$weight, vertex.weight =
rowSums(cellChat@net$weight), weight.scale = TRUE,
label.edge= FALSE, margin = c(0,0,0,0))
int_plot
dev.off()
fig_num <- fig_num + 1
netVisual_circle(cellChat@net$weight, vertex.weight =
rowSums(cellChat@net$weight), weight.scale = TRUE,
label.edge= FALSE, margin = c(0,0,0,0))
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*1.5, height = two_panel, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
count_map <- netVisual_heatmap(cellChat, measure = "count", color.heatmap = "Blues")
count_map
dev.off()
fig_num <- fig_num + 1
netVisual_heatmap(cellChat, measure = "count", color.heatmap = "Blues")
png(filename = paste0(fig_dir, "/Figure_ccc_", fig_num, ".png"), width = two_panel*1.5, height = two_panel, units = "in", res = 300)
par(mfrow = c(1,1), xpd=TRUE)
weight_map <- netVisual_heatmap(cellChat, measure = "weight", color.heatmap = "Blues")
weight_map
dev.off()
fig_num <- fig_num + 1
netVisual_heatmap(cellChat, measure = "weight", color.heatmap = "Blues")
rmarkdown::render("05-CCC.Rmd")
rmarkdown::render("05-CCC.Rmd")
bookdown::render_book(new_session = TRUE)
rm(list = ls())
